{"version":3,"file":"react.js","sources":["../../../src/js/extensions/react.js"],"sourcesContent":["/**\n * React integration for Normas\n *\n * @see {@link https://github.com/evrone/normas#reactjs-integration|Docs}\n * @see {@link https://github.com/evrone/normas/blob/master/src/js/extensions/react.js|Source}\n * @license MIT\n * @copyright Dmitry Karpunin <koderfunk@gmail.com>, 2017-2018\n */\n\nconst defaults = {\n  selector: '[data-react-component]',\n  listenOptions: {},\n};\n\nexport default function({ normas, React, ReactDOM }, components, options = {}) {\n  const { selector, listenOptions } = normas.helpers.deepMerge(defaults, options);\n\n  normas.listenToElement(\n    selector,\n    mountComponentToElement,\n    unmountComponentFromElement,\n    listenOptions,\n  );\n\n  function mountComponentToElement($element) {\n    const domNode = $element[0];\n    const name = domNode.getAttribute('data-react-component');\n    const props = JSON.parse(domNode.getAttribute('data-props'));\n    const componentClass = components[name];\n    const component = React.createElement(componentClass, props);\n    ReactDOM.render(component, domNode);\n  }\n\n  function unmountComponentFromElement($element) {\n    const domNode = $element[0];\n    ReactDOM.unmountComponentAtNode(domNode);\n  }\n};\n"],"names":["defaults","components","normas","React","ReactDOM","options","helpers","deepMerge","selector","listenOptions","listenToElement","$element","domNode","name","getAttribute","props","JSON","parse","componentClass","component","createElement","render","unmountComponentAtNode"],"mappings":"aASA,IAAMA,YACM,0DAIZ,WAAqDC,OAA3BC,IAAAA,OAAQC,IAAAA,MAAOC,IAAAA,SAAwBC,8DAC3BH,EAAOI,QAAQC,UAAUP,EAAUK,GAA/DG,IAAAA,SAAUC,IAAAA,gBAEXC,gBACLF,WAM+BG,OACzBC,EAAUD,EAAS,GACnBE,EAAOD,EAAQE,aAAa,wBAC5BC,EAAQC,KAAKC,MAAML,EAAQE,aAAa,eACxCI,EAAiBjB,EAAWY,GAC5BM,EAAYhB,EAAMiB,cAAcF,EAAgBH,KAC7CM,OAAOF,EAAWP,aAGQD,OAC7BC,EAAUD,EAAS,KAChBW,uBAAuBV,IAdhCH"}