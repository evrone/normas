{"version":3,"file":"turbolinks.production.js","sources":["../../../src/js/mixins/turbolinks.js"],"sourcesContent":["/**\n * Turbolinks integration for Normas\n *\n * @see {@link https://github.com/evrone/normas#turbolinks-integration|Docs}\n * @see {@link https://github.com/evrone/normas/blob/master/src/js/mixins/turbolinks.js|Source}\n * @license MIT\n * @copyright Dmitry Karpunin <koderfunk@gmail.com>, 2017-2018\n */\n\n// require navigation mixin\nexport default Base => (class extends Base {\n  static turboPageEnterEventName = 'turbolinks:load';\n  static turboPageLeaveEventName = 'turbolinks:before-cache';\n\n  bindPageEvents(options) {\n    this.Turbolinks = options.Turbolinks || global.Turbolinks;\n    const turbolinksExists = !!this.Turbolinks;\n    if (!this.enablings) this.enablings = {};\n    this.constructor.readOptions(this.enablings, options.enablings, { turbolinks: turbolinksExists });\n    if (NORMAS_DEBUG && options.enablings && options.enablings.turbolinks === true && !turbolinksExists) {\n      this.error('ðŸ›¤ Turbolinks: `options.enablings.turbolinks === true` but Turbolinks is not detected.',\n        this.constructor.readmeLink('turbolinks-integration'));\n    }\n    if (NORMAS_DEBUG) {\n      this.log('info', 'construct',\n        ...this.constructor.logColor(`ðŸ›¤ \"${this.instanceName}\" Turbolinks %REPLACE%.`,\n          this.enablings.turbolinks ? 'enabled' : 'disabled',\n          this.enablings.turbolinks ? 'green' : 'blue'));\n    }\n    if (this.enablings.turbolinks) {\n      // Turbolinks connected :)\n      // patchTurbolinks(this.Turbolinks); // TODO: check versions\n      patchTurbolinksPreviewControl(this.Turbolinks);\n      this.listenEvents(this.constructor.turboPageEnterEventName, this.pageEnter.bind(this));\n      this.listenEvents(this.constructor.turboPageLeaveEventName, this.pageLeave.bind(this));\n      if (options.Turbolinks) {\n        options.Turbolinks.start();\n      }\n    } else {\n      // No Turbolinks ;(\n      if (NORMAS_DEBUG && options.enablings && options.enablings.turbolinks === false) {\n        this.log('warn', 'construct',\n          `ðŸ›¤ You ${this.Turbolinks ? '' : 'do not '}have a Turbolinks and use integration, but \\`options.enablings.turbolinks === false\\`.`);\n      }\n      $(this.pageEnter.bind(this));\n    }\n  }\n\n  visit(location) {\n    if (this.enablings.turbolinks) {\n      this.Turbolinks.visit(location);\n    } else {\n      super.visit(location);\n    }\n  }\n\n  setHash(hash) {\n    if (this.enablings.turbolinks) {\n      let controller = this.Turbolinks.controller;\n      controller.replaceHistoryWithLocationAndRestorationIdentifier(hash, controller.restorationIdentifier);\n    } else {\n      super.setHash(hash);\n    }\n  }\n\n  replaceLocation(url) {\n    if (this.enablings.turbolinks) {\n      this.Turbolinks.controller.replaceHistoryWithLocationAndRestorationIdentifier(url);\n    } else {\n      super.replaceLocation(url);\n    }\n  }\n\n  pushLocation(url) {\n    if (this.enablings.turbolinks) {\n      this.Turbolinks.controller.pushHistoryWithLocationAndRestorationIdentifier(url);\n    } else {\n      super.pushLocation(url);\n    }\n  }\n\n  sayAboutPageLoading(state) {\n    if (this.enablings.turbolinks) {\n      const progressBar = this.Turbolinks.controller.adapter.progressBar;\n      if (state) {\n        progressBar.setValue(0);\n        progressBar.show();\n      } else {\n        progressBar.hide();\n      }\n    } else {\n      super.sayAboutPageLoading(state);\n    }\n  }\n});\n\nfunction patchTurbolinksPreviewControl(Turbolinks) {\n  class OurView extends Turbolinks.View {\n    render({ snapshot, error, isPreview }, callback) {\n      this.markAsPreview(isPreview);\n      if (snapshot) {\n        // added `isPreview` argument\n        this.renderSnapshot(snapshot, isPreview, callback);\n      } else {\n        this.renderError(error, callback);\n      }\n    }\n\n    // added `isPreview` argument\n    renderSnapshot(snapshot, isPreview, callback) {\n      const renderer = new OurSnapshotRenderer(this.getSnapshot(), Turbolinks.Snapshot.wrap(snapshot), isPreview);\n      renderer.delegate = this.delegate;\n      renderer.render(callback);\n    }\n  }\n  Turbolinks.View = OurView;\n\n  class OurSnapshotRenderer extends Turbolinks.SnapshotRenderer {\n    // added `isPreview` argument\n    constructor(currentSnapshot, newSnapshot, isPreview) {\n      super(currentSnapshot, newSnapshot);\n      if (isPreview) {\n        this.newBody = this.newBody.cloneNode(true);\n        this.newBody.isPreview = true;\n      }\n    }\n  }\n}\n\nfunction patchTurbolinks(Turbolinks) {\n  class OurHeadDetails extends Turbolinks.HeadDetails {\n    constructor(...args) {\n      super(...args);\n      this.elements = {};\n      $(this.element).children().each((index, element) => {\n        let key = turboElementToKey(element);\n        if (!this.elements[key]) {\n          this.elements[key] = {\n            type: turboElementType(element),\n            tracked: turboElementIsTracked(element),\n            elements: [],\n          };\n        }\n        this.elements[key].elements.push(element);\n      });\n    }\n    // getTrackedElementSignature() {\n    //   let sign = super.getTrackedElementSignature();\n    //   console.log('sign ', sign);\n    //   return sign;\n    // }\n  }\n  Turbolinks.HeadDetails = OurHeadDetails;\n}\n\n// Injection in Turbolinks.HeadDetails for override this logic:\nfunction turboElementToKey(element) {\n  let url = element.getAttribute('src') || element.getAttribute('href');\n  if (url) {\n    let cuts = url.split('/');\n    cuts = cuts[cuts.length - 1];\n    if (cuts) { url = cuts }\n  }\n  return url || element.outerHTML;\n}\n\nfunction turboElementType(element) {\n  if (turboElementIsScript(element)) {\n    return 'script';\n  } else if (turboElementIsStylesheet(element)) {\n    return 'stylesheet';\n  }\n  return null;\n}\n\nfunction turboElementIsTracked(element) {\n  return element.getAttribute('data-turbolinks-track') === 'reload';\n}\n\nfunction turboElementIsScript(element) {\n  let tagName = element.tagName.toLowerCase();\n  return tagName === 'script';\n}\n\nfunction turboElementIsStylesheet(element) {\n  let tagName = element.tagName.toLowerCase();\n  return tagName === 'style' || (tagName === 'link' && element.getAttribute('rel') === 'stylesheet');\n}\n"],"names":["Base","options","Turbolinks","global","turbolinksExists","this","enablings","constructor","readOptions","turbolinks","OurView","callback","snapshot","error","isPreview","markAsPreview","renderSnapshot","renderError","renderer","OurSnapshotRenderer","getSnapshot","Snapshot","wrap","delegate","render","View","currentSnapshot","newSnapshot","newBody","_this3","cloneNode","SnapshotRenderer","listenEvents","turboPageEnterEventName","pageEnter","bind","turboPageLeaveEventName","pageLeave","start","location","visit","hash","controller","replaceHistoryWithLocationAndRestorationIdentifier","restorationIdentifier","url","pushHistoryWithLocationAndRestorationIdentifier","state","progressBar","adapter","setValue","show","hide"],"mappings":"0uCAUsCA,6CAIrBC,QACRC,WAAaD,EAAQC,YAAcC,OAAOD,eACzCE,IAAqBC,KAAKH,WAC3BG,KAAKC,YAAWD,KAAKC,mBACrBC,YAAYC,YAAYH,KAAKC,UAAWL,EAAQK,WAAaG,WAAYL,IAW1EC,KAAKC,UAAUG,YAmEvB,SAAuCP,OAC/BQ,oKACmCC,OAA9BC,IAAAA,SAAUC,IAAAA,MAAOC,IAAAA,eACnBC,cAAcD,GACfF,OAEGI,eAAeJ,EAAUE,EAAWH,QAEpCM,YAAYJ,EAAOF,0CAKbC,EAAUE,EAAWH,OAC5BO,EAAW,IAAIC,EAAoBd,KAAKe,cAAelB,EAAWmB,SAASC,KAAKV,GAAWE,KACxFS,SAAWlB,KAAKkB,WAChBC,OAAOb,UAfET,EAAWuB,QAkBtBA,KAAOf,MAEZS,yBAEQO,EAAiBC,EAAab,4EAClCY,EAAiBC,WACnBb,MACGc,QAAUC,EAAKD,QAAQE,WAAU,KACjCF,QAAQd,WAAY,sBANGZ,EAAW6B,mBArFX1B,KAAKH,iBAC9B8B,aAAa3B,KAAKE,YAAY0B,wBAAyB5B,KAAK6B,UAAUC,KAAK9B,YAC3E2B,aAAa3B,KAAKE,YAAY6B,wBAAyB/B,KAAKgC,UAAUF,KAAK9B,OAC5EJ,EAAQC,cACFA,WAAWoC,WAQnBjC,KAAK6B,UAAUC,KAAK9B,qCAIpBkC,GACAlC,KAAKC,UAAUG,gBACZP,WAAWsC,MAAMD,uFAEVA,mCAIRE,MACFpC,KAAKC,UAAUG,WAAY,KACzBiC,EAAarC,KAAKH,WAAWwC,aACtBC,mDAAmDF,EAAMC,EAAWE,kHAEjEH,2CAIFI,GACVxC,KAAKC,UAAUG,gBACZP,WAAWwC,WAAWC,mDAAmDE,iGAExDA,wCAIbA,GACPxC,KAAKC,UAAUG,gBACZP,WAAWwC,WAAWI,gDAAgDD,8FAExDA,+CAIHE,MACd1C,KAAKC,UAAUG,WAAY,KACvBuC,EAAc3C,KAAKH,WAAWwC,WAAWO,QAAQD,YACnDD,KACUG,SAAS,KACTC,UAEAC,8GAGYL,+FAhFG,uGACA"}